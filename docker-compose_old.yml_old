version: '3'
services:
    ####################################################################################################
    # Nginx
    ####################################################################################################
    nginx:
        image: nginx
        ports:
            - "80:80"
        volumes:
            - ./www:/var/www
            - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - php
    php:
        #        build: .
        #    user: www-data:www-data
        build: .docker/php
        ports:
            - "5173:5173"
        volumes:
            - ./www:/var/www/
        depends_on:
            - db
        command: >
            bash -c "
              if [ ! -f /var/www/html/install.lock ]; then
                echo 'Starting setup...' &&
                cp config-dist.php config.php &&
                cp admin/config-dist.php admin/config.php &&
                chmod 777 config.php &&
                chmod 777 admin/config.php &&
                touch /var/www/html/install.lock &&
                echo 'Setup complete';
              else
                echo 'Setup already done';
              fi"

    #touch /var/www/html/install.lock;
    #        wait-for-it mysql:3306 -t 60 &&
    #php /var/www/html/install/cli_install.php install --username admin --password admin --email email@example.com --http_server http://localhost/ --db_driver mysqli --db_hostname db --db_username root --db_password opencart --db_database opencart --db_port 3306 --db_prefix oc_ &&
    #        command: >
    #            bash -c "if [ ! -f /var/www/html/install.lock ]; then
    #                       chmod -R 777 /var/www &&
    #                       cp config-dist.php config.php &&
    #                       cp admin/config-dist.php admin/config.php &&
    #                       chmod 777 config.php &&
    #                       chmod 777 admin/config.php;
    #                     fi"

    #    mysql:
    #        image: mysql:5.7
    #        ports:
    #            - "3306:3306"
    #        environment:
    #            - MYSQL_ROOT_PASSWORD=opencart
    #            - MYSQL_DATABASE=opencart
    ####################################################################################################
    # DATABASE (MariaDB)
    ####################################################################################################
    db:
        image: mariadb
        ports:
            - "3306:3306"
        volumes:
            - .docker/db/data:/var/lib/mysql
            - .docker/logs:/var/log/mysql
            - .docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
            - .docker/db/sql:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: opencart
            MYSQL_DATABASE: opencart
    #            MYSQL_USER: laravel_db_user
    #            MYSQL_PASSWORD: laravel_db_pass

    #  adminer:
    #    image: adminer:latest
    #    environment:
    #      ADMINER_DEFAULT_SERVER: mysql
    #    depends_on:
    #      - mysql
    #    ports:
    #      - "8080:8080"

    #    redis:
    #        image: redis:latest
    redis:
        image: redis:latest
        command: redis-server --appendonly yes
        volumes:
            - .docker/redis/data:/data
    #        ports:
    #            - 6379:6379

    memcached:
        image: memcached:latest

    #    postgres:
    #        image: postgres:latest
    #        environment:
    #            - POSTGRES_USER=postgres
    #            - POSTGRES_PASSWORD=opencart
    #            - POSTGRES_DB=opencart
    ####################################################################################################
    # PostgreSQL
    ####################################################################################################
    # db:
    #     image: postgres:16
    #     ports:
    #         - 5432:5432
    #     volumes:
    #         - .docker/db/data:/var/lib/postgresql/data
    #         - .docker/db/sql:/docker-entrypoint-initdb.d
    #     environment:
    #         - POSTGRES_USER=refactorian
    #         - POSTGRES_PASSWORD=refactorian
    #         - POSTGRES_DB=refactorian
